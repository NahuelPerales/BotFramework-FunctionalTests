steps:
- task: UseDotNet@2
  displayName: 'Use .Net Core sdk 2.1.x'
  inputs:
    version: 2.1.x

- task: UseDotNet@2
  displayName: 'Use .Net Core sdk 3.1.x'
  inputs:
    version: 3.1.x

- task: NuGetToolInstaller@1
  displayName: 'Use NuGet'

# Start of Restore & Build excluding Composer and V3
- task: DotNetCoreCLI@2
  displayName: Restore bots
  inputs:
    command: restore
    projects: |
      SkillFunctionalTests.sln
      !Bots/DotNet/Skills/CodeFirst/EchoSkillBot-v3/EchoSkillBot-v3.csproj
    feedsToUse: 'select'
    includeNuGetOrg: true
    arguments: '--no-build'

- task: DotNetCoreCLI@2
  displayName: Build bots
  inputs:
    command: build
    projects: |
      SkillFunctionalTests.sln
      !Bots/DotNet/Skills/CodeFirst/EchoSkillBot-v3/EchoSkillBot-v3.csproj
    feedsToUse: 'select'
    includeNuGetOrg: true
    arguments: '-v n --configuration $(BuildConfiguration) -p:Platform="$(BuildPlatform)" --no-restore'
# End of Restore & Build excluding Composer and V3
           
- task: DotNetCoreCLI@2
  displayName: 'Build composer bots'
  inputs:
    command: publish
    publishWebProjects: false
    projects: |
      Bots/DotNet/**/Composer/**/runtime/azurewebapp/Microsoft.BotFramework.Composer.WebApp.csproj
    modifyOutputPath: false
    zipAfterPublish: false
# End of Restore & Build for Composer

# Start of Restore & Build for V3
- task: NuGetCommand@2
  displayName: 'Restore V3 bot'
  inputs:
    restoreSolution: 'Bots/DotNet/Skills/CodeFirst/EchoSkillBot-v3/EchoSkillBot-v3.csproj'
    restoreDirectory: '$(SolutionDir)packages'
    feedsToUse: 'select'
    includeNuGetOrg: true
    noCache: true
    

- task: MSBuild@1
  displayName: 'Build V3 bot'
  inputs:
    solution: 'Bots/DotNet/Skills/CodeFirst/EchoSkillBot-v3/EchoSkillBot-v3.csproj'
    #vsVersion: 16.0
    platform: 'AnyCPU'
    configuration: '$(BuildConfiguration)'
# End of Restore & Build for V3

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: build folder'
  inputs:
    PathtoPublish: build
    ArtifactName: build

- powershell: |
   cd ..
   ls -R
  displayName: 'Dir workspace'
  continueOnError: true
  condition: succeededOrFailed()
